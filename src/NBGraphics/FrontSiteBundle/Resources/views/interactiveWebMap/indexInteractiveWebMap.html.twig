{% extends '@NBGraphicsFrontSite/frontBaseElements.html.twig' %}

{% block body %}

    <div class="container interactive-web-map">

        <h2 class="text-center">
            Bienvenue sur notre onglet de recherche interactif.
        </h2>

        <h3>Rechercher un oiseau</h3>
        <section id="search">

        {{ form_start(searchForm, {'attr': {'class': '', 'role': 'form'}}) }}
            <div class="searchForm">
                {{ form_row(searchForm.famille) }}
                {{ form_row(searchForm.step) }}
                {{ form_row(searchForm.oiseau) }}
            </div>
            {{ form_row(searchForm.search) }}

            <div class="form-group reinit-search">
                <a href="{{ path('nb_graphics_front_site_interactivewebmap') }}" class="btn btn-warning"> <i class="fa fa-refresh" aria-hidden="true"></i>
                    Réinitialiser la recherche
                </a>
            </div>

        {{ form_end(searchForm) }}
        </section>

        {% if not resultsPerBird and not resultsPerFamily %}
            <hr>
            <h3>Nos dernières observations</h3>

            <div class="form-group map-container">
                <div id="map"></div>
            </div>
        {% endif %}

        {% if resultsPerBird %}

            <div class="dataTables_wrapper table-responsive">
                <h3>Résultat(s) de votre recherche par oiseau "{{ bird.nomVern }} - {{ bird.nomComplet }}"</h3>
                <table id="results" class="table table-hover dataTable">
                    <thead>
                        <tr>
                            <th>Observation n°</th>
                            <th>Famille de l'oiseau observé</th>
                            <th>Oiseau observé</th>
                            <th>Date de l'observation</th>
                            <th>Département</th>
                            <th>Observation en détail</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for bird in resultsPerBird %}
                        <tr>
                            <td>{{ loop.index }}</td>
                            <td>{{ bird.taxref.famille }}</td>
                            <td>{{ bird.taxref.nomVern }}</td>
                            <td>{{ bird.dateAt|date('d/m/Y') }}</td>
                            <td>{{ bird.departement }}</td>
                            <td>
                                <a class="btn btn-default"
                                   href="{{ path('nbgraphics_frontsite_interactivewebmap_displaybirddetail', {
                                       'birdObs': bird.id
                                   }) }}">
                                    Voir l'observation
                                </a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>

            <hr>
            <h3>Affiner la carte interactive</h3>
            <section id="criteria">
                <div class="searchMap">
                    {{ form_start(criteriaMapsForm) }}
                    {{ form_widget(criteriaMapsForm) }}
                    {{ form_end(criteriaMapsForm) }}
                </div>
            </section>
            <hr>
            <div class="form-group map-container">
                <div id="map"></div>
            </div>

        {% endif %}

        {% if resultsPerFamily %}

            <div class="map-results dataTables_wrapper table-responsive">
                <h3>Résultat(s) de votre recherche par famille d'oiseau "{{ family.famille }}"</h3>
                <table id="results" class="table table-hover dataTable">
                    <thead>
                        <tr>
                            <th>Observation n°</th>
                            <th>Famille de l'oiseau observé</th>
                            <th>Oiseau observé</th>
                            <th>Date de l'observation</th>
                            <th>Département</th>
                            <th>Observation en détail</th>
                        </tr>
                    </thead>
                    <tbody>
                    {% for bird in resultsPerFamily %}
                        <tr>
                            <td>{{ loop.index }}</td>
                            <td>{{ bird.taxref.famille }}</td>
                            <td>{{ bird.taxref.nomVern }}</td>
                            <td>{{ bird.dateAt|date('d/m/Y') }}</td>
                            <td>{{ bird.departement }}</td>
                            <td>
                                <a class="btn btn-default"
                                   href="{{ path('nbgraphics_frontsite_interactivewebmap_displaybirddetail', {
                                       'birdObs': bird.id
                                   }) }}">
                                    Voir l'observation
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>

            <hr>
            <h3>Affiner la carte interactive</h3>
            <section id="criteria">
            <div class="searchMap">
                {{ form_start(criteriaMapsForm) }}
                {{ form_widget(criteriaMapsForm) }}
                {{ form_end(criteriaMapsForm) }}
            </div>
            </section>
            <hr>
            <div class="form-group map-container">
                <div id="map"></div>
            </div>
        {% endif %}

    </div>

{% endblock%}

{% block javascripts %}
    {{ parent() }}

    {#
    When the page is loaded and not results have been asked, display the original map
    #}
    {% if not resultsPerBird and not resultsPerFamily %}
        <script>
            var map;
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    center: {lat: 48.866667, lng: 2.333333},
                    zoom: 4,
                    scrollwheel: false,
                    maxZoom: 10
                });

                {% for bird in resultsByDefault %}
                var marker{{ loop.index }} = new google.maps.Marker({
                    position: {
                        lat: {{ bird.latitude }},
                        lng: {{ bird.longitude }}
                    },
                    map: map,
                    title: "Voir l'observation"
                });

                // Create the strings
                var contentString{{ loop.index }} = '';
                contentString{{ loop.index }} += '<div id="content">';
                contentString{{ loop.index }} += '<p>';
                contentString{{ loop.index }} += 'Oiseau observé : {{ bird.taxref.nomVern }}';
                contentString{{ loop.index }} += '<br>';
                contentString{{ loop.index }} += 'Date de l\'observation : {{ bird.dateAt|date('d/m/Y') }}';
                contentString{{ loop.index }} += '</p>';
                contentString{{ loop.index }} += '<p>';
                contentString{{ loop.index }} += '<a class="btn btn-default" href="{{ path('nbgraphics_frontsite_interactivewebmap_displaybirddetail', {
                    'birdObs': bird.id
                }) }}">';
                contentString{{ loop.index }} += 'Voir l\'observation';
                contentString{{ loop.index }} += '</a>';
                contentString{{ loop.index }} += '</p>';
                contentString{{ loop.index }} += '</div>';

                // Creathe info windows
                var infowindow{{ loop.index }} = new google.maps.InfoWindow({
                    content: contentString{{ loop.index }}
                });
                // Add click event
                marker{{ loop.index }}.addListener('click', function() {
                    infowindow{{ loop.index }}.open(map, marker{{ loop.index }});
                });
                {% endfor %}
            }

        </script>
    {% endif %}

    {#
    Then, when a result is present, display the map with the results selected
    #}
    {% if (resultsPerBird or resultsPerFamily) %}

        <script>

            $(document).ready(function() {
                if ($('#results').length > 0) {
                    $('html, body').animate({scrollTop: $('#results').offset().top -70}, 'slow');
                }
            });

            // Initialize The Google Map Element
            var initMap = function() {
                var lat = 48.866667;
                var lgn = 2.333333;
                var myLatLng = {lat: lat, lng: lgn};
                // Create a map object and specify the DOM element for display.
                var map = new google.maps.Map(document.getElementById('map'), {
                    center: myLatLng,
                    scrollwheel: false,
                    zoom: 4,
                    {% if is_granted('ROLE_ADMIN') %}
                    maxZoom: 18,
                    {% else %}
                    maxZoom: 10
                    {% endif %}

                });



                var localizeBtn = document.getElementById('btnGeoloc');
                var loc = navigator.geolocation;
                // Center the map when localizeBtn is clicked
                function getLocationByLocalizeBtn(position) {
                    // assign them to variables
                    var lat = position.coords.latitude;
                    var lon = position.coords.longitude;

                    // Modify the map according to the new position
                    map.setCenter({
                        lat : lat,
                        lng : lon
                    });
                    map.setZoom(8);
                }
                // The event handler linked to the function below
                localizeBtn.onclick = function() {
                    loc.getCurrentPosition(getLocationByLocalizeBtn)
                };



                var select = document.getElementById('nbgraphics_corebundle_criteria_maps_departement');
                var value;
                // Center the map according to the department
                select.onchange = function() {
                    // Recover the value of select and add 000 to the end
                    value = select.options[select.selectedIndex].text;
                    value = value + '000';
                    // Make the AJAX Request
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            // Retrieve the latitude and longitude needed
                            var data = JSON.parse(xhr.responseText);
                            var lng = data.features[0].geometry.coordinates[0];
                            var lat = data.features[0].geometry.coordinates[1];
                            // Modify the map according to the new position
                            map.setCenter({
                                lat : lat,
                                lng : lng
                            });
                            map.setZoom(8);
                        }
                    };
                    xhr.open('GET', window.location.protocol + '//api-adresse.data.gouv.fr/search/?q=postcode=' + value);
                    xhr.send();
                };




                {% if resultsPerBird %}
                {% for bird in resultsPerBird %}
                // Create the markers
                var marker{{ loop.index }} = new google.maps.Marker({
                    position: {
                        lat: {{ bird.latitude }},
                        lng: {{ bird.longitude }}
                    },
                    map: map,
                    title: "Voir l'observation"
                });
                // Create the strings
                var contentString{{ loop.index }} = '';
                contentString{{ loop.index }} += '<div id="content">';
                contentString{{ loop.index }} += '<p>';
                contentString{{ loop.index }} += 'Oiseau observé : {{ bird.taxref.nomVern }}';
                contentString{{ loop.index }} += '<br>';
                contentString{{ loop.index }} += 'Date de l\'observation : {{ bird.dateAt|date('d/m/Y') }}';
                contentString{{ loop.index }} += '</p>';
                contentString{{ loop.index }} += '<p>';
                contentString{{ loop.index }} += '<a class="btn btn-default" href="{{ path('nbgraphics_frontsite_interactivewebmap_displaybirddetail', {
                    'birdObs': bird.id
                }) }}">';
                contentString{{ loop.index }} += 'Voir l\'observation';
                contentString{{ loop.index }} += '</a>';
                contentString{{ loop.index }} += '</p>';
                contentString{{ loop.index }} += '</div>';

                // Creathe info windows
                var infowindow{{ loop.index }} = new google.maps.InfoWindow({
                    content: contentString{{ loop.index }}
                });
                // Add click event
                marker{{ loop.index }}.addListener('click', function() {
                    infowindow{{ loop.index }}.open(map, marker{{ loop.index }});
                });
                {% endfor %}
                {% elseif resultsPerFamily %}
                {% for bird in resultsPerFamily %}
                // Create the markers
                var marker{{ loop.index }} = new google.maps.Marker({
                    position: {
                        lat: {{ bird.latitude }},
                        lng: {{ bird.longitude }}
                    },
                    map: map,
                    title: "Voir l'observation"
                });
                // Create the strings
                var contentString{{ loop.index }} = '';
                contentString{{ loop.index }} += '<div id="content">';
                contentString{{ loop.index }} += '<p>';
                contentString{{ loop.index }} += 'Oiseau observé : {{ bird.taxref.nomVern }}';
                contentString{{ loop.index }} += '<br>';
                contentString{{ loop.index }} += 'Date de l\'observation : {{ bird.dateAt|date('d/m/Y') }}';
                contentString{{ loop.index }} += '</p>';
                contentString{{ loop.index }} += '<p>';
                contentString{{ loop.index }} += '<a class="btn btn-default" href="{{ path('nbgraphics_frontsite_interactivewebmap_displaybirddetail', {
                    'birdObs': bird.id
                }) }}">';
                contentString{{ loop.index }} += 'Voir l\'observation';
                contentString{{ loop.index }} += '</a>';
                contentString{{ loop.index }} += '</p>';
                contentString{{ loop.index }} += '</div>';

                // Creathe info windows
                var infowindow{{ loop.index }} = new google.maps.InfoWindow({
                    content: contentString{{ loop.index }}
                });
                // Add click event
                marker{{ loop.index }}.addListener('click', function() {
                    infowindow{{ loop.index }}.open(map, marker{{ loop.index }});
                });
                {% endfor %}
                {% endif %}
            };
        </script>
    {% endif %}
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCv4cK5Ln6Z5EEtoY2gT4zf-J6rVgmnqtw&callback=initMap" async defer></script>
    <script type="text/javascript">
        $(function () {
            $('#results').DataTable({
                "responsive": false,
                "paging": true,
                "lengthChange": true,
                "searching": false,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "language": {
                    "processing":     "Traitement en cours...",
                    "lengthMenu":    "Afficher _MENU_ &eacute;l&eacute;ments",
                    "info":           "Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
                    "infoEmpty":      "Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments",
                    "infoFiltered":   "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
                    "infoPostFix":    "",
                    "paginate": {
                        "first":      "Premier",
                        "previous":   "Pr&eacute;c&eacute;dent",
                        "next":       "Suivant",
                        "last":       "Dernier"
                    },
                    "aria": {
                        "sortAscending":  ": activer pour trier la colonne par ordre croissant",
                        "sortDescending": ": activer pour trier la colonne par ordre décroissant"
                    }
                }
            });
        });
    </script>
{% endblock %}